import React, { useState, useRef } from "react";
import {
  View,
  Text,
  Image,
  StyleSheet,
  FlatList,
  ScrollView,
  SafeAreaView,
  TouchableOpacity
} from "react-native";
import { BannerAd, BannerAdSize, TestIds } from "react-native-google-mobile-ads"; 
import CocktailDetailModal from "../Components/CocktailDetailModal";
import { widthPercentage, heightPercentage, fontPercentage } from "../assets/styles/FigmaScreen";

const bannerImages = [
  require("../assets/drawable/banner.jpg"),
  require("../assets/drawable/banner.jpg"),
];
const categories = [
  { 
    title: "Ïö∞ÏïÑÌïú ÌÅ¥ÎûòÏãù", 
    description: "Í≤©ÏãùÏùÑ Í∞ñÏ∂ò ÌíàÍ≤©ÏûàÎäî ÏπµÌÖåÏùº", 
    icon: require("../assets/drawable/classic.png"), 
    textColor: "#5D8A78",
    backgroundColor: "#E4F0E9"
  },
  { 
    title: "Îã¨ÏΩ§Ìïú ÌååÌã∞", 
    description: "Î∂ÑÏúÑÍ∏∞Î•º ÎùÑÏõå Ï§Ñ ÌôîÎ†§Ìïú ÏπµÌÖåÏùº", 
    icon: require("../assets/drawable/party.png"), 
    textColor: "#D38456",
    backgroundColor: "#FBE5D6"
  },
  { 
    title: "ÏùÄÏùÄÌïú Î¨¥Îìú", 
    description: "Ï°∞Ïö©Ìïú Î∞§ÏùÑ ÏúÑÌïú Î∂ÄÎìúÎü¨Ïö¥ ÏπµÌÖåÏùº", 
    icon: require("../assets/drawable/mood.png"), 
    textColor: "#B47B6C",
    backgroundColor: "#F3DED7"
  },
  { 
    title: "Ï≤≠ÎüâÌïú Ïó¨Î¶Ñ", 
    description: "ÌÉúÏñë ÏïÑÎûò ÏãúÏõêÌïòÍ≤å Ï¶êÍ∏∞Îäî ÏπµÌÖåÏùº", 
    icon: require("../assets/drawable/summer.png"), 
    textColor: "#5478C1",
    backgroundColor: "#DCE7F9"
  },
  { 
    title: "Í∞ïÎ†¨Ìïú Ìïú Ïûî", 
    description: "ÍπäÍ≥† Î¨µÏßÅÌïú Î∂ÑÏúÑÍ∏∞Î•º Í∞ÄÏßÑ ÏπµÌÖåÏùº", 
    icon: require("../assets/drawable/one_shot.png"), 
    textColor: "#C14C4C",
    backgroundColor: "#F4D6D6"
  },
  { 
    title: "Î∂ÄÎã¥ ÏóÜÎäî ÏãúÏûë", 
    description: "ÏπµÌÖåÏùº ÏûÖÎ¨∏ÏûêÎ•º ÏúÑÌïú Í∞ÄÎ≤ºÏö¥ ÏÑ†ÌÉù", 
    icon: require("../assets/drawable/start.png"), 
    textColor: "#A78A64",
    backgroundColor: "#F1E6D5"
  }
];


const cocktails = [
  { 
    id: "1", 
    name: "ÏπµÌÖåÏùº Î™Ö", 
    image: require("../assets/drawable/cocktail.jpg"),
    description: "ÏπµÌÖåÏùº ÏÜåÍ∞ú ÌïúÏ§ÑÏûÖÎãàÎã§.",
    size: "120ml",
    taste: "ÏÉàÏΩ§Ìïú Îßõ, ÏïΩÍ∞Ñ Ïß† Îßõ",
    alcohol: "ÏïΩ 13~15%",
    recommendation: "ÎçîÏö¥ ÎÇ† Ìï¥Î≥ÄÏóêÏÑú, Í∞ÄÎ≤ºÏö¥ ÏãùÏÇ¨ÏôÄ Ìï®Íªò ÌïòÎäî Í≤ÉÏùÑ Ï∂îÏ≤úÌï©ÎãàÎã§.",
    ingredients: "Îç∞ÌÇ¨Îùº, ÎùºÏûÑ Ï£ºÏä§, Ïò§Î†åÏßÄ Î¶¨ÌÅêÏñ¥",
  },
  { 
    id: "2", 
    name: "ÏπµÌÖåÏùº Î™Ö", 
    image: require("../assets/drawable/cocktail.jpg"),
    description: "ÏπµÌÖåÏùº ÏÜåÍ∞ú ÌïúÏ§ÑÏûÖÎãàÎã§.",
    size: "150ml",
    taste: "Îã¨ÏΩ§Ìïú Îßõ",
    alcohol: "ÏïΩ 5~7%",
    recommendation: "ÎîîÏ†ÄÌä∏ÏôÄ Ìï®Íªò Ï¶êÍ∏∞Í∏∞ Ï¢ãÏùÄ ÏπµÌÖåÏùºÏûÖÎãàÎã§.",
    ingredients: "Îüº, ÏΩîÏΩîÎÑõ Î∞ÄÌÅ¨, ÌååÏù∏Ïï†Ìîå Ï£ºÏä§",
  },
  { 
    id: "3", 
    name: "ÏπµÌÖåÏùº Î™Ö", 
    image: require("../assets/drawable/cocktail.jpg"),
    description: "ÏπµÌÖåÏùº ÏÜåÍ∞ú ÌïúÏ§ÑÏûÖÎãàÎã§.",
    size: "180ml",
    taste: "Î¨µÏßÅÌïú Îßõ, ÏåâÏã∏Î¶ÑÌïú Îßõ",
    alcohol: "ÏïΩ 20~25%",
    recommendation: "Ï†ÄÎÖÅÏóê ÏßÑÌïú ÏùåÏãùÏùÑ Í≥ÅÎì§Ïó¨ ÎßàÏãúÍ∏∞ Ï¢ãÏäµÎãàÎã§.",
    ingredients: "ÏúÑÏä§ÌÇ§, ÏßÑÏ†Ä ÎπÑÏñ¥, ÎùºÏûÑ",
  },
];

const CocktailBookScreen: React.FC = () => {
  const [selectedCocktail, setSelectedCocktail] = useState<any>(null);
  const [currentPage, setCurrentPage] = useState(1);
  const bannerRef = useRef<FlatList<any>>(null);
  const [selectedCocktailIndex, setSelectedCocktailIndex] = useState<number | null>(null);
  const openModal = (cocktail: any) => {
    const index = cocktails.findIndex((c) => c.id === cocktail.id);  // ‚úÖ Ïù∏Îç±Ïä§ Ï∞æÍ∏∞
    setSelectedCocktailIndex(index);
    setSelectedCocktail(cocktail);
  };
  

  const closeModal = () => {
    setSelectedCocktail(null);
  };

  const onViewableItemsChanged = useRef(({ viewableItems }: any) => {
    console.log("onViewableItemsChanged Ìò∏Ï∂úÎê®");
    console.log("viewableItems:", viewableItems);
  
    if (!viewableItems || !Array.isArray(viewableItems) || viewableItems.length === 0) {
      return;
    }
    
    setCurrentPage(viewableItems[0]?.index + 1 || 1);
  }).current;
  
  
  
  return (
    <SafeAreaView style={styles.safeContainer}>
      <ScrollView style={styles.container}>
        {/* ÏÉÅÎã® Î°úÍ≥† & ÏïÑÏù¥ÏΩò */}
        <View style={styles.header}>
          <Image source={require("../assets/drawable/Logo.jpg")} style={styles.logo} />
          <Image source={require("../assets/drawable/find.png")} style={styles.icon} />
        </View>

        {/* Î∞∞ÎÑà Ïä¨ÎùºÏù¥Îçî */}
        <View style={styles.bannerContainer}>
          <FlatList
            ref={bannerRef}
            horizontal
            pagingEnabled
            data={bannerImages}
            keyExtractor={(_, index) => index.toString()}
            renderItem={({ item }) => (
              <Image source={item} style={styles.bannerImage} />
            )}
            showsHorizontalScrollIndicator={false}
            onViewableItemsChanged={onViewableItemsChanged}
            viewabilityConfig={{ itemVisiblePercentThreshold: 1 }}
          />
          {/* ÌéòÏù¥ÏßÄ ÌëúÏãú */}
          <View style={styles.pageIndicator}>
            <Text style={styles.pageText}>{currentPage} / {bannerImages.length}</Text>
          </View>
        </View>


        {/* üìå Í¥ëÍ≥† Î∞∞ÎÑà Ï∂îÍ∞Ä */}
        <View style={styles.adContainer}>
          <BannerAd
            unitId={TestIds.BANNER}  // üõë Ïã§Ï†ú Ïï±ÏóêÏÑúÎäî Google AdMob IDÎ°ú Î≥ÄÍ≤Ω
            size={BannerAdSize.BANNER}
            requestOptions={{
              requestNonPersonalizedAdsOnly: true,
            }}
          />
        </View>

        {/* Î∂ÑÏúÑÍ∏∞Î≥Ñ ÏπµÌÖåÏùº Î¶¨Ïä§Ìä∏ */}
        {categories.map((category, index) => (
          <View key={index} style={styles.categorySection}>
            {/* Ïπ¥ÌÖåÍ≥†Î¶¨ Ï†úÎ™© */}
            <View style={styles.categoryHeader}>
              <Image source={category.icon} style={styles.categoryIcon} />
              <Text style={styles.categoryTitle}>{category.title}</Text>
              <View style={[styles.categoryDescriptionContainer, { backgroundColor: category.backgroundColor}]}>
                <Text style={[styles.categoryDescription, {color: category.textColor}]}>{category.description}</Text>
              </View>
            </View>

            {/* ÏπµÌÖåÏùº Î¶¨Ïä§Ìä∏ (Í∞ÄÎ°ú Ïä§ÌÅ¨Î°§) */}
            <FlatList
              horizontal
              data={cocktails}
              keyExtractor={(item) => item.id}
              renderItem={({ item }) => (
                <TouchableOpacity onPress={() => openModal(item)} style={styles.cocktailCard}>
                  <Image source={item.image} style={styles.cocktailImage} />
                  <Text style={styles.cocktailName}>{item.name}</Text>
                </TouchableOpacity>
              )}
              showsHorizontalScrollIndicator={false}
            />
          </View>
        ))}
      </ScrollView>

      {/* Î™®Îã¨ */}
      {selectedCocktail !== null && selectedCocktailIndex !== null && (
        <CocktailDetailModal
          visible={true}
          onClose={closeModal}
          cocktailIndex={selectedCocktailIndex}
          cocktails={cocktails}
        />
      )}
    </SafeAreaView>
  );
};

export default CocktailBookScreen;

const styles = StyleSheet.create({
  safeContainer: {
    flex: 1,
    backgroundColor: "#FFFCF3",
  },
  container: {
    flex: 1,
    backgroundColor: "#FFFCF3",
  },
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingHorizontal: widthPercentage(15),
    paddingVertical: heightPercentage(10),
  },
  recommendationSection: {
    width: "100%",
    alignItems: "center",
    paddingBottom: heightPercentage(20),
  },
  recommendationText: {
    fontSize: fontPercentage(18),
    fontWeight: "bold",
    textAlign: "center",
    color: "#333",
  },
  categorySection: {
    paddingHorizontal: widthPercentage(15),
    marginBottom: heightPercentage(20),
  },
  categoryHeader: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: heightPercentage(10),
  },
  categoryTitle: {
    fontSize: fontPercentage(16),
    fontWeight: "bold",
    color: "#444",
  },
  categoryIcon: {
    width: widthPercentage(30),
    height: widthPercentage(30),
    marginRight: widthPercentage(10),
  },
  cocktailCard: {
    width: widthPercentage(152),
    alignItems: "center",
    marginRight: widthPercentage(15),
  },
  cocktailImage: {
    width: widthPercentage(152),
    height: heightPercentage(114),
    borderRadius: widthPercentage(10),
  },
  cocktailName: {
    fontSize: fontPercentage(14),
    fontWeight: "bold",
    color: "#333",
    marginTop: heightPercentage(5),
  },
  icon: {
    width: widthPercentage(28),
    height: widthPercentage(28),
  },
  recommendationImage: {
    width: widthPercentage(375),
    height: heightPercentage(285),
  },
  categoryDescriptionContainer: {
    backgroundColor: "#F5F6EE",
    borderRadius: widthPercentage(8),
    paddingHorizontal: widthPercentage(10),
    paddingVertical: heightPercentage(4),
    marginLeft: widthPercentage(10),
  },
  categoryDescription: {
    fontSize: fontPercentage(11),
    color: "#7DACA4",
  },
  logo: {
    width: widthPercentage(110),
    height: heightPercentage(45),
    resizeMode: "contain",
  },
  bannerContainer: {
    position: "relative",
    width: widthPercentage(375), // ÌîºÍ∑∏Îßà Í∏∞Ï§Ä
    height: heightPercentage(285),
    borderRadius: widthPercentage(10),
    marginVertical: heightPercentage(15),
  },
  bannerImage: {
    width: widthPercentage(375),
    height: heightPercentage(285),
    resizeMode: "cover",
  },
  pageIndicator: {
    position: "absolute",
    bottom: heightPercentage(10),
    right: widthPercentage(15),
    backgroundColor: "rgba(0, 0, 0, 0.5)",
    paddingHorizontal: widthPercentage(8),
    paddingVertical: heightPercentage(4),
    borderRadius: widthPercentage(10),
  },
  pageText: {
    color: "#FFF",
    fontSize: fontPercentage(14),
    fontWeight: "bold",
  },
  adContainer: {
    alignItems: "center",
    marginVertical: heightPercentage(15),
  },

});